{"version":3,"sources":["components/NavBar/NavBar.tsx","components/pages/HomePage.tsx","components/pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PersonList/PersonList.tsx","components/pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavBar","className","role","isActive","classNames","to","HomePage","NotFoundPage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","sex","name","slug","PersonInfo","personsFather","personsMother","selectedSlug","born","died","motherName","fatherName","isSelected","PersonList","persons","length","map","find","pers","PeoplePage","useState","setPersons","errorMessage","setErrorMessage","isLoaded","setIsLoaded","useParams","getPeoplesFromServer","peoples","useEffect","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d134d3a1.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { sex, name, slug } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n  personsFather: Person | null;\n  personsMother: Person | null;\n  selectedSlug: string;\n};\n\nexport const PersonInfo: React.FC<Props> = ({\n  person,\n  personsFather,\n  personsMother,\n  selectedSlug,\n}) => {\n  const {\n    sex,\n    born,\n    died,\n    slug,\n  } = person;\n  const motherName = person.motherName || '-';\n  const fatherName = person.fatherName || '-';\n  const isSelected = selectedSlug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': isSelected },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {personsMother\n          ? <PersonLink person={personsMother} />\n          : motherName}\n      </td>\n      <td>\n        {personsFather\n          ? <PersonLink person={personsFather} />\n          : fatherName}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo';\n\ntype Props = {\n  persons: Person[];\n  selectedSlug: string;\n};\n\nexport const PersonList: React.FC<Props> = ({\n  persons,\n  selectedSlug,\n}) => {\n  if (!persons.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {persons.map(person => {\n          const { motherName, fatherName, slug } = person;\n          const personsMother = persons.find(pers => pers.name === motherName)\n           || null;\n          const personsFather = persons.find(pers => pers.name === fatherName)\n           || null;\n\n          return (\n            <PersonInfo\n              key={slug}\n              person={person}\n              personsMother={personsMother}\n              personsFather={personsFather}\n              selectedSlug={selectedSlug}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader/Loader';\nimport { PersonList } from '../PersonList';\n\nexport const PeoplePage: React.FC = () => {\n  const [persons, setPersons] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { slug = '' } = useParams();\n\n  const getPeoplesFromServer = async () => {\n    try {\n      const peoples = await getPeople();\n\n      setPersons(peoples);\n      setIsLoaded(true);\n    } catch (error) {\n      setErrorMessage('Something went wrong');\n    }\n  };\n\n  useEffect(() => {\n    getPeoplesFromServer();\n  }, []);\n\n  return (\n    !errorMessage\n      ? (\n        <>\n          <h1 className=\"title\">People Page</h1>\n\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              {!isLoaded && <Loader />}\n\n              {isLoaded && (\n                <PersonList\n                  persons={persons}\n                  selectedSlug={slug}\n                />\n              )}\n            </div>\n          </div>\n        </>\n      )\n      : (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { HomePage } from './components/pages/HomePage';\nimport { NotFoundPage } from './components/pages/NotFoundPage';\nimport { PeoplePage } from './components/pages/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\"/people/:slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}